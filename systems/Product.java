/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package systems;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author guru
 */
public class Product extends javax.swing.JFrame {

    /**
     * Creates new form Product
     */
    public Product() {
        initComponents();
        selectProducts();
        selectBeverages();
        selectBread();
        selectBakingGoods();
        selectCannedGoods();
        selectDairy();
        GetCat();
    }
    
    	
 public String Combobox(){
  String toString = selCat.getSelectedItem().toString();
  return toString;
 }
 
 
    Connection Con = null;
    Statement St = null;
    ResultSet Rs = null;
    
    public void selectProducts(){
        try{
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Systems", "root", "sherry");
        St = Con.createStatement();
        Rs = St.executeQuery("select * from Product");
        proTable.setModel(DbUtils.resultSetToTableModel(Rs));
        
    }catch(Exception e)
        {
        e.printStackTrace();
        }
    }
    
    private void GetCat(){
        try{
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Systems", "root", "sherry");
        St = Con.createStatement();
        String query = "select * from Category";
        Rs = St.executeQuery(query);
        while(Rs.next()){
            String MyCat = Rs.getString("Name");
            selCat.addItem(MyCat);
        }
        
    }catch(Exception e)
        {
        e.printStackTrace();
        }
    }
    
    public void selectBeverages(){
        try{
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Systems", "root", "sherry");
        St = Con.createStatement();
        Rs = St.executeQuery("select * from Beverages");
        proTable.setModel(DbUtils.resultSetToTableModel(Rs));
        } 
    catch(Exception e)
        {
        e.printStackTrace();
        
    }
    }
    
    /**
     *
     */
    public void selectBread(){
        try{
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Systems", "root", "sherry");
        St = Con.createStatement();
        
        Rs = St.executeQuery("select * from Bread");
        proTable.setModel(DbUtils.resultSetToTableModel(Rs));
    }catch(Exception e)
        {
        e.printStackTrace();
        }
    }
    
     public void selectBakingGoods(){
        try{
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Systems", "root", "sherry");
        St = Con.createStatement();
        
        Rs = St.executeQuery("select * from BakingGoods");
        proTable.setModel(DbUtils.resultSetToTableModel(Rs));
    }catch(Exception e)
        {
        e.printStackTrace();
        }
    }
     
    public void selectCannedGoods(){
        try{
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Systems", "root", "sherry");
        St = Con.createStatement();
        
        Rs = St.executeQuery("select * from CannedGoods");
        proTable.setModel(DbUtils.resultSetToTableModel(Rs));
    }catch(Exception e)
        {
        e.printStackTrace();
        }
    }
    
    public void selectDairy(){
        try{
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Systems", "root", "sherry");
        St = Con.createStatement();
        
        Rs = St.executeQuery("select * from Dairy");
        proTable.setModel(DbUtils.resultSetToTableModel(Rs));
    }catch(Exception e)
        {
        e.printStackTrace();
        }
    }
    
 /* String getText(selCat box){
        String selectedCategory="";
        String[] category = {"Beverages", "Bread", "Dairy", "CannedGoods", "BakingGoods"};
        int index = box.getSelectedIndex();
        for(int i = 0; i<category.length;i++){
        if(i == index)
            selectedCategory = category[i];
    }
        return selectedCategory;
    }*/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        proId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        proPrice = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        proName = new javax.swing.JTextField();
        delBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        selCat = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        proQuantity = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        proTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(30, 3, 84));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Product Name");

        proId.setBackground(new java.awt.Color(30, 3, 84));
        proId.setForeground(new java.awt.Color(255, 255, 255));
        proId.setToolTipText("enter Id");
        proId.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        proId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proIdActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Product Id");

        proPrice.setBackground(new java.awt.Color(30, 3, 84));
        proPrice.setForeground(new java.awt.Color(255, 255, 255));
        proPrice.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        proPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proPriceActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Category");

        proName.setBackground(new java.awt.Color(30, 3, 84));
        proName.setForeground(new java.awt.Color(255, 255, 255));
        proName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        proName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proNameActionPerformed(evt);
            }
        });

        delBtn.setText("DELETE");
        delBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                delBtnMouseClicked(evt);
            }
        });

        addBtn.setText("ADD");
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBtnMouseClicked(evt);
            }
        });

        updateBtn.setText("UPDATE");
        updateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateBtnMouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Liberation Sans Narrow", 1, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("PRODUCTS");

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logos/arrow-96-32.png"))); // NOI18N
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        selCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select Category --" }));
        selCat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selCatItemStateChanged(evt);
            }
        });
        selCat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selCatMouseClicked(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Quantity");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Price");

        proQuantity.setBackground(new java.awt.Color(30, 3, 84));
        proQuantity.setForeground(new java.awt.Color(255, 255, 255));
        proQuantity.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        proQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proQuantityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel10)
                        .addGap(90, 90, 90)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(proPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                            .addComponent(proName, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                            .addComponent(proId, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(selCat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(proQuantity)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(delBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(proId, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(proName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(proQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(proPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(selCat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(30, 3, 84));

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(30, 3, 84));
        jLabel8.setText("PRODUCTS LIST");

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(30, 3, 84));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logos/icons8-close-30.png"))); // NOI18N
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        proTable.setForeground(new java.awt.Color(30, 3, 84));
        proTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Name", "Description"
            }
        ));
        proTable.setToolTipText("");
        proTable.setGridColor(new java.awt.Color(255, 255, 255));
        proTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                proTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(proTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(391, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(147, 147, 147)
                        .addComponent(jLabel11))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel8)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 616, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(2, 2, 2)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(3, 3, 3)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void proIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proIdActionPerformed

    private void proPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proPriceActionPerformed

    private void proNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proNameActionPerformed

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        new Home().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel11MouseClicked

    private void proQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proQuantityActionPerformed

    private void addBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseClicked
        if(selCat.getSelectedItem().toString().equals("Beverages"))
        {        
            Stack st=new Stack();
            st.push(proName.getText(), Integer.valueOf(proQuantity.getText()), Integer.valueOf(proPrice.getText()));
            JOptionPane.showMessageDialog(this, "Added using stack method");
            selectBeverages();
        }else if(selCat.getSelectedItem().toString().equals("Bread / Bakery")){
            Stack st=new Stack();
            st.push(proName.getText(), Integer.valueOf(proQuantity.getText()), Integer.valueOf(proPrice.getText()));
            JOptionPane.showMessageDialog(this, "Added using stack method");
            selectBread();
         }else if(selCat.getSelectedItem().toString().equals("Canned / Jarred Goods")){
            Stack st=new Stack();
            st.push(proName.getText(), Integer.valueOf(proQuantity.getText()), Integer.valueOf(proPrice.getText()));
            JOptionPane.showMessageDialog(this, "Added using stack method");
            selectCannedGoods();
         }else if(selCat.getSelectedItem().toString().equals("Dairy")){
            Stack st=new Stack();
            st.push(proName.getText(), Integer.valueOf(proQuantity.getText()), Integer.valueOf(proPrice.getText()));
            JOptionPane.showMessageDialog(this, "Added using stack method");
            selectDairy();
        }else if(selCat.getSelectedItem().toString().equals("Dry / Baking Goods")||selCat.getSelectedItem().toString().equals("Frozen Foods")||selCat.getSelectedItem().toString().equals("Meat")){
            Queue qu = new Queue();
            qu.enQueue(proName.getText(), Integer.valueOf(proQuantity.getText()), Double.valueOf(proPrice.getText()));
            JOptionPane.showMessageDialog(this, "Added using Queue Method");
            selectBakingGoods();
            }else{
            JOptionPane.showMessageDialog(this, "Category not Added");
        }
        
        //Stack st=new Stack();
       //st.push(proName.getText(), Integer.valueOf(proQuantity.getText()), Integer.valueOf(proPrice.getText()));
       //selectProducts();
    }//GEN-LAST:event_addBtnMouseClicked

    private void delBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delBtnMouseClicked
        if(selCat.getSelectedItem().toString().equals("Beverages")){
            Stack st = new Stack();
            st.pop();
            selectBeverages();
            JOptionPane.showMessageDialog(this, "Popped from Stack");
        }else if(selCat.getSelectedItem().toString().equals("Bread / Bakery")){
            Stack st = new Stack();
            st.pop();
            selectBread();
            JOptionPane.showMessageDialog(this, "Popped from Stack");
        }else if(selCat.getSelectedItem().toString().equals("Canned / Jarred Goods")){
            Stack st = new Stack();
            st.pop();
            selectCannedGoods();
            JOptionPane.showMessageDialog(this, "Popped from Stack");
        }else if(selCat.getSelectedItem().toString().equals("Dairy")){
            Stack st = new Stack();
            st.pop();
            selectDairy();
            JOptionPane.showMessageDialog(this, "Popped from Stack");
        }else if(selCat.getSelectedItem().toString().equals("Dry / Baking Goods")||selCat.getSelectedItem().toString().equals("Frozen Foods")||selCat.getSelectedItem().toString().equals("Meat")){
            Queue qu = new Queue();
            qu.deQueue();
            selectBakingGoods();
        }else{
        JOptionPane.showMessageDialog(this, "Method is not Added yet");
        }
        
        //Stack st=new Stack();
        //st.pop();
    }//GEN-LAST:event_delBtnMouseClicked

    private void proTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_proTableMouseClicked
       DefaultTableModel model = (DefaultTableModel)proTable.getModel();
        int Myindex = proTable.getSelectedRow();
        proId.setText(model.getValueAt(Myindex, 0).toString());
        proName.setText(model.getValueAt(Myindex, 1).toString());
        proQuantity.setText(model.getValueAt(Myindex, 2).toString());
        proPrice.setText(model.getValueAt(Myindex, 3).toString());
    }//GEN-LAST:event_proTableMouseClicked

    private void selCatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selCatMouseClicked
       
    }//GEN-LAST:event_selCatMouseClicked

    private void selCatItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selCatItemStateChanged
         if(selCat.getSelectedItem().toString().equals("Dry / Baking Goods")||selCat.getSelectedItem().toString().equals("Frozen Foods")||selCat.getSelectedItem().toString().equals("Meat")){
        selectBakingGoods();
        
        }else if(selCat.getSelectedItem().toString().equals("Beverages")){
        selectBeverages();
        }else if(selCat.getSelectedItem().toString().equals("Bread / Bakery")){
        selectBread(); 
        }else if(selCat.getSelectedItem().toString().equals("Canned / Jarred Goods")){
        selectCannedGoods(); 
        }else if(selCat.getSelectedItem().toString().equals("Dairy")){
        selectDairy(); 
        }
    }//GEN-LAST:event_selCatItemStateChanged

    private void updateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateBtnMouseClicked
          if(proId.getText().isEmpty()||proName.getText().isEmpty()||proPrice.getText().isEmpty()||proQuantity.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Missing details");
        }
          else if(selCat.getSelectedItem().toString().equals("Beverages")){
            try{
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Systems", "root", "sherry");
            String Query = "Update Beverages set Name='" + proName.getText()+"'"+",Quantity='"+proQuantity.getText()+"'"+",Price='"+proPrice.getText()+"'"+"where Id="+proId.getText();
            Statement Add = Con.createStatement();
            Add.executeUpdate(Query);
            JOptionPane.showMessageDialog(this, "Product updated");
            selectBeverages();
            }catch(SQLException e)
            {
                e.printStackTrace();
            }
        }else if(selCat.getSelectedItem().toString().equals("Bread / Bakery")){
            try{
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Systems", "root", "sherry");
            String Query = "Update Bread set Name='" + proName.getText()+"'"+",Quantity='"+proQuantity.getText()+"'"+",Price='"+proPrice.getText()+"'"+"where Id="+proId.getText();
            Statement Add = Con.createStatement();
            Add.executeUpdate(Query);
            JOptionPane.showMessageDialog(this, "Product updated");
            selectBread();
            }catch(SQLException e)
            {
                e.printStackTrace();
            }
        }else if(selCat.getSelectedItem().toString().equals("Canned / Jarred Goods")){
            try{
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Systems", "root", "sherry");
            String Query = "Update CannedGoods set Name='" + proName.getText()+"'"+",Quantity='"+proQuantity.getText()+"'"+",Price='"+proPrice.getText()+"'"+"where Id="+proId.getText();
            Statement Add = Con.createStatement();
            Add.executeUpdate(Query);
            JOptionPane.showMessageDialog(this, "Product updated");
            selectCannedGoods();
            }catch(SQLException e)
            {
                e.printStackTrace();
            }
        }else if(selCat.getSelectedItem().toString().equals("Dairy")){
            try{
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Systems", "root", "sherry");
            String Query = "Update Dairy set Name='" + proName.getText()+"'"+",Quantity='"+proQuantity.getText()+"'"+",Price='"+proPrice.getText()+"'"+"where Id="+proId.getText();
            Statement Add = Con.createStatement();
            Add.executeUpdate(Query);
            JOptionPane.showMessageDialog(this, "Product updated");
            selectDairy();
            }catch(SQLException e)
            {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_updateBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton delBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField proId;
    private javax.swing.JTextField proName;
    private javax.swing.JTextField proPrice;
    private javax.swing.JTextField proQuantity;
    private javax.swing.JTable proTable;
    private javax.swing.JComboBox<String> selCat;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
